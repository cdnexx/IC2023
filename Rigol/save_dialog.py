# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'save_dialog.ui'
#
# Created by: PyQt5 UI code generator 5.15.7
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.


import json
import datetime
from PyQt5 import QtCore, QtGui, QtWidgets


class Ui_Dialog(object):

    def __init__(self, save) -> None:
        super().__init__()
        self.__save = save

    def setupUi(self, Dialog):
        Dialog.setObjectName("Dialog")
        Dialog.resize(310, 130)
        self.filename_input = QtWidgets.QLineEdit(Dialog)
        self.filename_input.setGeometry(QtCore.QRect(140, 51, 151, 21))
        self.filename_input.setObjectName("filename_input")
        self.filename_label = QtWidgets.QLabel(Dialog)
        self.filename_label.setGeometry(QtCore.QRect(20, 50, 121, 21))
        self.filename_label.setObjectName("filename_label")
        self.msg_label = QtWidgets.QLabel(Dialog)
        self.msg_label.setGeometry(QtCore.QRect(20, 0, 341, 41))
        self.msg_label.setObjectName("msg_label")
        self.buttonBox = QtWidgets.QDialogButtonBox(Dialog)
        self.buttonBox.setGeometry(QtCore.QRect(140, 90, 161, 31))
        self.buttonBox.setLayoutDirection(QtCore.Qt.RightToLeft)
        self.buttonBox.setStandardButtons(
            QtWidgets.QDialogButtonBox.Cancel | QtWidgets.QDialogButtonBox.Save)
        self.buttonBox.setCenterButtons(False)
        self.buttonBox.setObjectName("buttonBox")

        self.retranslateUi(Dialog)
        self.filename_input.returnPressed.connect(
            lambda: self.save_config_local(Dialog))  # type: ignore
        self.buttonBox.accepted.connect(
            lambda: self.save_config_local(Dialog))  # type: ignore
        self.buttonBox.rejected.connect(Dialog.reject)  # type: ignore
        QtCore.QMetaObject.connectSlotsByName(Dialog)

    def retranslateUi(self, Dialog):
        _translate = QtCore.QCoreApplication.translate
        Dialog.setWindowTitle(_translate("Dialog", "Guardar"))
        self.filename_label.setText(
            _translate("Dialog", "Nombre del archivo:"))
        self.msg_label.setText(_translate(
            "Dialog", "El nombre por defecto ser√° la fecha y hora del guardado"))

    def get_filename(self):
        return self.filename_input.text()

    def empty_config_file(self, filename):
        initial_content = {
            "config": {
                "type": "",
                "frequency": 0.0,
                "amplitude": 0.0
            },
            "mode": {
                "activeMode": "",
                "param1": 0,
                "param2": 0
            }
        }
        # Create empty file
        file = open(f"configs/{filename}.json", "w+")
        file.close()

        # "Load" initial content to json file
        json_object = json.dumps(initial_content, indent=4)
        with open(f"configs/{filename}.json", "w") as outfile:
            outfile.write(json_object)

    def save_config_local(self, Dialog):
        filename = self.get_filename()
        if len(filename) == 0:
            # Set filename as the date if none is given
            date = datetime.datetime.now()
            filename = f"{date.strftime('%d%b%y_%H%M')}"
        try:
            self.__save(f"{filename}")
        except FileNotFoundError:
            self.empty_config_file(filename)
            self.__save(f"{filename}")
        Dialog.accept()
